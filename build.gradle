plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.7'
}

repositories {
    mavenCentral()
}

bootJar.enabled = false

allprojects {
    group = 'com.kr.moo'
    version = '0.0.1'

    repositories {
        mavenCentral()
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    sourceCompatibility = '21'

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    test {
        useJUnitPlatform()
    }

}

project(':moo-app') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        implementation project(':moo-shared')
        implementation project(':moo-user-service')
        implementation project(':moo-core')
    }
}


project(':moo-admin') {
    bootJar { enabled = true }
    jar { enabled = false }

    dependencies {
        implementation project(':moo-shared')
        implementation project(':moo-core')
    }
}

project(':moo-shared') {
    bootJar { enabled = false }
    jar { enabled = true }
}

project(':moo-core') {
    bootJar { enabled = false }
    jar { enabled = true }
}


project(':moo-user-service') {
    bootJar { enabled = false }
    jar { enabled = true }
}

task copyBootJarToTarget(type: Copy) {
    dependsOn ':moo-app:bootJar'

    from(project(':moo-app').tasks.named('bootJar').map { it.archiveFile.get().asFile })
    def versionTag = project.version.toString()

    into("${rootProject.projectDir}/target")
    rename { fileName ->
        return "app-${versionTag}.jar"
    }
}

task mooAppBootJar {
    dependsOn clean, copyBootJarToTarget
    group = "build"
    description = "moo-app의 bootJar 빌드 및 복사"

    doLast {
        println("Moo App BootJar 복사 완료")
        println("target 디렉토리에 JAR가 복사되었습니다.")
    }
}